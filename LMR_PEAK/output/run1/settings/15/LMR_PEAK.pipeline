step1.
	# fix chromosomal naming
	sed 's/chr//g' [% datasource.Peaks %] > [% step1.gappedPeak.bed %];
	sed 's/chr//g' /lustre/scratch110/sanger/rg12/Pipeline/LMR_PEAK/input/[% datasource.LMR %] > [% step1.lmr.bed %];

	#restrict to gene co-ordinates
	bedtools intersect -a [% step1.gappedPeak.bed %] -b [% input.Mus_musculus.GRCm38.79.genes.chrom.gtf %] > [% step1.genic.bed %];
	# Intersect Peaks with LMRs requiring atleast 80% overlap of Peak or LMR
	bedtools intersect -wo -a [% step1.genic.bed %] -b [% step1.lmr.bed %] -f 0.8 -F 0.8 -e > [% step1.LMR_intersect.bed %];
	#peak in output if at least 1 overlap with B
	bedtools intersect -u -a [% step1.genic.bed %] -b [% step1.lmr.bed %] -f 0.8 -F 0.8 -e > [% step1.LMR_intersect_peakcount.bed %];
	bedtools intersect -u -a [% step1.lmr.bed %] -b [% step1.genic.bed %] -f 0.8 -F 0.8 -e > [% step1.LMR_intersect_lmrcount.bed %];

	#Peaks per gene
	bedtools intersect -loj -a [% input.Mus_musculus.GRCm38.79.genes.chrom.gtf %] -b [% step1.genic.bed %] > [% step1.PeaksPerGene.bed %];
	#LMR per gene
	bedtools intersect -loj -a [% input.Mus_musculus.GRCm38.79.genes.chrom.gtf %] -b [% step1.lmr.bed %] > [% step1.LMRPerGene.bed %];

step2.
	R --vanilla > [% step2.out %] <<-"RSCRIPT"
		library(ggplot2);
		LMR_intersect <- read.table("[% step1.LMR_intersect.bed %]",sep="\t");
		intersect_length <-  LMR_intersect$V3- LMR_intersect$V2;
		df <- data.frame(length =intersect_length, location=rep_len('intersect',length(intersect_length)));
		pdf('[% step2.density.pdf %]',width = 6, height = 4,bg = "transparent");
		ggplot(df, aes(x=length)) + geom_density(aes(group=location, colour=location, fill=location), alpha=0.3) + scale_x_log10();
		dev.off();
		#t.test(df$values ~ df$ind);
		library(stringr);
		Peaks <- read.table("[% step1.PeaksPerGene.bed %]",header = F,sep = "\t",as.is = T);
		Peaks <- Peaks[Peaks$V13 != ".",];
		Peaks <- data.frame(GeneId=str_match(Peaks$V9,"gene_id ([0-9A-Za-z]+)")[,2], GeneName=str_match(Peaks$V9,"gene_name ([0-9A-Za-z]+)")[,2], length = Peaks$V12 - Peaks$V11);
		PeaksPerGene <- aggregate( length ~ GeneName + GeneId, Peaks, sum);
		LMR <- read.table("[% step1.LMRPerGene.bed %]",header = F,sep = "\t",as.is = T);
		LMR <- LMR[LMR$V13 != ".",];
		LMR <- data.frame(GeneId=str_match(LMR$V9,"gene_id ([0-9A-Za-z]+)")[,2], GeneName=str_match(LMR$V9,"gene_name ([0-9A-Za-z]+)")[,2], length = LMR$V12 - LMR$V11);
		LMRPerGene <- aggregate( length ~ GeneName + GeneId, LMR, sum);
		genicMerge <- merge(PeaksPerGene,LMRPerGene,by = 'GeneId');
		pdf('[% step2.LMRvsPeak.pdf %]',width = 6, height = 4,bg = "transparent");
		ggplot(genicMerge, aes(length.x,length.y)) + geom_point(alpha = 1/5,colour='blue') + scale_x_log10() + scale_y_log10() + labs(x = "Total Genic Peak Length",y = "Total Genic LMR Length");
		dev.off();
		cor.test(genicMerge$length.x,genicMerge$length.y);
	RSCRIPT
	:
