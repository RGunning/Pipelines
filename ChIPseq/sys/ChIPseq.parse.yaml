--- 
annotatepeaks: 
  cmd: "cd [% annotatepeaks %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tclusters=4\n\tngs.plot.r -G mm10 -R genebody -C [% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %] -T \"[% datasource.mark_full %] [% datasource.Cell %] Cell\" -O out -L 3000 -GO km -KNC ${clusters} -CO blue:white:red -P 5 -FI 1;\n\t[% software.ExtractGeneClusterings.r %] out;\n\tfor i in $(seq 1 ${clusters});\n\tdo\n\t\techo -e \"[% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %]\tout.cluster${i}.txt\t\\\"[% datasource.mark_full %] [% datasource.Cell %] Cell Cluster${i}\\\"\" >> [% annotatepeaks.config.txt %];\n\tdone\n\tngs.plot.r -G mm10 -R genebody -C [% annotatepeaks.config.txt %] -O clusters -L 3000 -GO hc -CO blue:white:red -P 5;\n\tcat > [% annotatepeaks.configB.txt %] << EOF\n[% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %]\t[% input.B_ordered_TPM.txt %]\t\"[% datasource.mark_full %] B cell\"\nEOF\n\tngs.plot.r -G mm10 -R genebody -C [% annotatepeaks.configB.txt %] -O TPMorderedB -L 3000 -GO none -CO blue:white:red -P 5;\n\tcat > [% annotatepeaks.configT.txt %] << EOF\n[% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %]\t[% input.T_ordered_TPM.txt %]\t\"[% datasource.mark_full %] T cell\"\nEOF\n\tngs.plot.r -G mm10 -R genebody -C [% annotatepeaks.configT.txt %] -O TPMorderedT -L 3000 -GO none -CO blue:white:red -P 5; 2>[% annotatepeaks.err %]"
  condition: ~
  cores: 5
  mem: 5000
  placeholders: 
    - annotatepeaks
    - samtoolsview.output1
    - samtoolsviewInp.output1
    - datasource.mark_full
    - datasource.Cell
    - software.ExtractGeneClusterings.r
    - samtoolsview.output1
    - samtoolsviewInp.output1
    - datasource.mark_full
    - datasource.Cell
    - annotatepeaks.config.txt
    - annotatepeaks.config.txt
    - annotatepeaks.configB.txt
    - samtoolsview.output1
    - samtoolsviewInp.output1
    - input.B_ordered_TPM.txt
    - datasource.mark_full
    - annotatepeaks.configB.txt
    - annotatepeaks.configT.txt
    - samtoolsview.output1
    - samtoolsviewInp.output1
    - input.T_ordered_TPM.txt
    - datasource.mark_full
    - annotatepeaks.configT.txt
    - annotatepeaks.err
annotatepeaksgroup: 
  cmd: "cd [% annotatepeaksgroup %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tngs.plot.r -G mm10 -R genebody -C [% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %] -T \"[% datasource.mark_full %] [% datasource.Cell %] Cell\" -O out -L 3000 -CO blue:white:red -P 5 -FI 0;\n\tfor clusters in {4..10};\n\t\tdo name=\"cluster.${clusters}\";\n\t\treplot.r heatmap -I out.zip -O ${name} -T \"[% datasource.mark_full %] [% datasource.Cell %] Cell\" -L 3000 -GO km -KNC ${clusters} -CO blue:white:red -P 5;\n\t\tExtractGName.R ${name}.RData;\n\tdone 2>[% annotatepeaksgroup.err %]"
  condition: ~
  cores: 5
  mem: 5000
  outputfiles: 
    - cluster.4.RData
  placeholders: 
    - annotatepeaksgroup
    - samtoolsview.output1
    - samtoolsviewInp.output1
    - datasource.mark_full
    - datasource.Cell
    - datasource.mark_full
    - datasource.Cell
    - annotatepeaksgroup.err
bamcorrelate: 
  cmd: cd [% bamcorrelate %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;	bamCorrelate bins -b [% jobs.samtoolsview.output1 %] -o heatmap.pdf --corMethod pearson --labels [% jobs.datasource.replicate %] --colorMap Reds --zMin 0.5 --zMax 1 -o correlation_spearman.pdf; 2>[% bamcorrelate.err %]
  condition: once
  cores: 16
  mem: 5000
  placeholders: 
    - bamcorrelate
    - jobs.samtoolsview.output1
    - jobs.datasource.replicate
    - bamcorrelate.err
bamtofq: 
  cmd: "cd [% bamtofq %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t###CRAM\n\tif [ [% datasource.datatype %] == \"cram\" ];\n\t\tthen if [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\tthen iget [% datasource.Lane1 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL F=[% bamtofq.read_1_lane_1.fastq %] F2=[% bamtofq.read_2_lane_1.fastq %];\n\t\telse iget [% datasource.Lane1 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL > [% bamtofq.read_1_lane_1.fastq %] ;\n\t\tfi;\n\t\tif [ [% datasource.multi_lane %] == \"TRUE\" ];\n\t\t\tthen if [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen iget [% datasource.Lane2 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL F=[% bamtofq.read_1_lane_2.fastq %] F2=[% bamtofq.read_2_lane_2.fastq %];\n\t\t\telse iget [% datasource.Lane2 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL > [% bamtofq.read_1_lane_2.fastq %] ;\n\t\t\tfi;\n\t\t\tcat [% bamtofq.read_1_lane_1.fastq %] [% bamtofq.read_1_lane_2.fastq %] > [% bamtofq.out_1.fq %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen cat [% bamtofq.read_2_lane_1.fastq %] [% bamtofq.read_2_lane_2.fastq %] > [% bamtofq.out_2.fq %];\n\t\t\tfi;\n\t\t\tgzip -c [% bamtofq.out_1.fq %] > [% bamtofq.out_1.fq.gz %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen gzip -c [% bamtofq.out_2.fq %] > [% bamtofq.out_2.fq.gz %];\n\t\t\tfi;\n\t\telse gzip -c [% bamtofq.read_1_lane_1.fastq %] > [% bamtofq.out_1.fq.gz %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen gzip -c [% bamtofq.read_2_lane_1.fastq %] > [% bamtofq.out_2.fq.gz %];\n\t\t\tfi;\n\t\tfi;\n\t###\xC2\xA0BAM\n\telif [ [% datasource.datatype %] == \"bam\" ];\n\t\tthen samtools sort [% datasource.Lane1 %] -o [% bamtofq.lane1.bam %];\n\t\tif [ [% datasource.multi_lane %] == \"TRUE\" ];\n\t\t\tthen samtools sort [% datasource.Lane2 %] -o [% bamtofq.lane2.bam %];\n\t\t\tsamtools merge [% bamtofq.merged.bam %] [% bamtofq.lane1.bam %] [% bamtofq.lane2.bam %];\n\t\t\trm [% bamtofq.lane1.bam %] [% bamtofq.lane2.bam %];\n\t\telse cat [% bamtofq.lane1.bam %] > [% bamtofq.merged.bam %];\n\t\t\trm [% bamtofq.lane1.bam %];\n\t\tfi;\n\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\tthen\n\t\t\t\tbamtofastq filename=[% bamtofq.merged.bam %] gz=1 F=[% bamtofq.out_1.fq.gz %] F2=[% bamtofq.out_2.fq.gz %];\n\t\t\t\trm [% bamtofq.merged.bam %];\n\t\telse\n\t\t\tbamtofastq gz=1 filename=[% bamtofq.merged.bam %] > [% bamtofq.out_1.fq.gz %];\n\t\t\trm [% bamtofq.merged.bam %];\n\t\tfi;\n\telse\n\t\tcat [% datasource.Lane1 %]* > [% bamtofq.out_1.fq.gz %];\n\tfi\n\trm *.fastq; 2>[% bamtofq.err %]"
  condition: ~
  mem: 1500
  placeholders: 
    - bamtofq
    - datasource.datatype
    - datasource.SE_PE
    - datasource.Lane1
    - bamtofq.read_1_lane_1.fastq
    - bamtofq.read_2_lane_1.fastq
    - datasource.Lane1
    - bamtofq.read_1_lane_1.fastq
    - datasource.multi_lane
    - datasource.SE_PE
    - datasource.Lane2
    - bamtofq.read_1_lane_2.fastq
    - bamtofq.read_2_lane_2.fastq
    - datasource.Lane2
    - bamtofq.read_1_lane_2.fastq
    - bamtofq.read_1_lane_1.fastq
    - bamtofq.read_1_lane_2.fastq
    - bamtofq.out_1.fq
    - datasource.SE_PE
    - bamtofq.read_2_lane_1.fastq
    - bamtofq.read_2_lane_2.fastq
    - bamtofq.out_2.fq
    - bamtofq.out_1.fq
    - bamtofq.out_1.fq.gz
    - datasource.SE_PE
    - bamtofq.out_2.fq
    - bamtofq.out_2.fq.gz
    - bamtofq.read_1_lane_1.fastq
    - bamtofq.out_1.fq.gz
    - datasource.SE_PE
    - bamtofq.read_2_lane_1.fastq
    - bamtofq.out_2.fq.gz
    - datasource.datatype
    - datasource.Lane1
    - bamtofq.lane1.bam
    - datasource.multi_lane
    - datasource.Lane2
    - bamtofq.lane2.bam
    - bamtofq.merged.bam
    - bamtofq.lane1.bam
    - bamtofq.lane2.bam
    - bamtofq.lane1.bam
    - bamtofq.lane2.bam
    - bamtofq.lane1.bam
    - bamtofq.merged.bam
    - bamtofq.lane1.bam
    - datasource.SE_PE
    - bamtofq.merged.bam
    - bamtofq.out_1.fq.gz
    - bamtofq.out_2.fq.gz
    - bamtofq.merged.bam
    - bamtofq.merged.bam
    - bamtofq.out_1.fq.gz
    - bamtofq.merged.bam
    - datasource.Lane1
    - bamtofq.out_1.fq.gz
    - bamtofq.err
bamtofqinp: 
  cmd: "cd [% bamtofqinp %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t###CRAM\n\tif [ [% datasource.datatype %] == \"cram\" ];\n\t\tthen if [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\tthen iget [% datasource.Inp_lane1 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL F=[% bamtofqinp.read_1_lane_1.fastq %] F2=[% bamtofqinp.read_2_lane_1.fastq %];\n\t\telse iget [% datasource.Inp_lane1 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL > [% bamtofqinp.read_1_lane_1.fastq %] ;\n\t\tfi;\n\t\tif [ [% datasource.multi_lane %] == \"TRUE\" ];\n\t\t\tthen if [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen iget [% datasource.Inp_lane2 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL F=[% bamtofqinp.read_1_lane_2.fastq %] F2=[% bamtofqinp.read_2_lane_2.fastq %];\n\t\t\telse iget [% datasource.Inp_lane2 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL > [% bamtofqinp.read_1_lane_2.fastq %] ;\n\t\t\tfi;\n\t\t\tcat [% bamtofqinp.read_1_lane_1.fastq %] [% bamtofqinp.read_1_lane_2.fastq %] > [% bamtofqinp.out_1.fq %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen cat [% bamtofqinp.read_2_lane_1.fastq %] [% bamtofqinp.read_2_lane_2.fastq %] > [% bamtofqinp.out_2.fq %];\n\t\t\tfi;\n\t\t\tgzip -c [% bamtofqinp.out_1.fq %] > [% bamtofqinp.out_1.fq.gz %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen gzip -c [% bamtofqinp.out_2.fq %] > [% bamtofqinp.out_2.fq.gz %];\n\t\t\tfi;\n\t\telse gzip -c [% bamtofqinp.read_1_lane_1.fastq %] > [% bamtofqinp.out_1.fq.gz %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen gzip -c [% bamtofqinp.read_2_lane_1.fastq %] > [% bamtofqinp.out_2.fq.gz %];\n\t\t\tfi;\n\t\tfi;\n\t###\xC2\xA0BAM\n\telif [ [% datasource.datatype %] == \"bam\" ];\n\t\tthen samtools sort [% datasource.Inp_lane1 %] -o [% bamtofqinp.lane1.bam %];\n\t\tif [ [% datasource.multi_lane %] == \"TRUE\" ];\n\t\t\tthen samtools sort [% datasource.Inp_lane2 %] -o [% bamtofqinp.lane2.bam %];\n\t\t\tsamtools merge [% bamtofqinp.merged.bam %] [% bamtofqinp.lane1.bam %] [% bamtofqinp.lane2.bam %];\n\t\t\trm [% bamtofqinp.lane1.bam %] [% bamtofqinp.lane2.bam %];\n\t\telse cat [% bamtofqinp.lane1.bam %] > [% bamtofqinp.merged.bam %];\n\t\t\trm [% bamtofqinp.lane1.bam %];\n\t\tfi;\n\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\tthen bamtofastq filename=[% bamtofqinp.merged.bam %] gz=1 F=[% bamtofqinp.out_1.fq.gz %] F2=[% bamtofqinp.out_2.fq.gz %];\n\t\t\trm [% bamtofqinp.merged.bam %];\n\t\telse\n\t\t\tbamtofastq gz=1 filename=[% bamtofqinp.merged.bam %] > [% bamtofqinp.out_1.fq.gz %];\n\t\t\trm [% bamtofqinp.merged.bam %];\n\t\tfi;\n\telse\n\t\tcat [% datasource.Inp_lane1 %]* > [% bamtofqinp.out_1.fq.gz %];\n\tfi\n\trm *.fastq; 2>[% bamtofqinp.err %]"
  condition: ~
  mem: 1500
  placeholders: 
    - bamtofqinp
    - datasource.datatype
    - datasource.SE_PE
    - datasource.Inp_lane1
    - bamtofqinp.read_1_lane_1.fastq
    - bamtofqinp.read_2_lane_1.fastq
    - datasource.Inp_lane1
    - bamtofqinp.read_1_lane_1.fastq
    - datasource.multi_lane
    - datasource.SE_PE
    - datasource.Inp_lane2
    - bamtofqinp.read_1_lane_2.fastq
    - bamtofqinp.read_2_lane_2.fastq
    - datasource.Inp_lane2
    - bamtofqinp.read_1_lane_2.fastq
    - bamtofqinp.read_1_lane_1.fastq
    - bamtofqinp.read_1_lane_2.fastq
    - bamtofqinp.out_1.fq
    - datasource.SE_PE
    - bamtofqinp.read_2_lane_1.fastq
    - bamtofqinp.read_2_lane_2.fastq
    - bamtofqinp.out_2.fq
    - bamtofqinp.out_1.fq
    - bamtofqinp.out_1.fq.gz
    - datasource.SE_PE
    - bamtofqinp.out_2.fq
    - bamtofqinp.out_2.fq.gz
    - bamtofqinp.read_1_lane_1.fastq
    - bamtofqinp.out_1.fq.gz
    - datasource.SE_PE
    - bamtofqinp.read_2_lane_1.fastq
    - bamtofqinp.out_2.fq.gz
    - datasource.datatype
    - datasource.Inp_lane1
    - bamtofqinp.lane1.bam
    - datasource.multi_lane
    - datasource.Inp_lane2
    - bamtofqinp.lane2.bam
    - bamtofqinp.merged.bam
    - bamtofqinp.lane1.bam
    - bamtofqinp.lane2.bam
    - bamtofqinp.lane1.bam
    - bamtofqinp.lane2.bam
    - bamtofqinp.lane1.bam
    - bamtofqinp.merged.bam
    - bamtofqinp.lane1.bam
    - datasource.SE_PE
    - bamtofqinp.merged.bam
    - bamtofqinp.out_1.fq.gz
    - bamtofqinp.out_2.fq.gz
    - bamtofqinp.merged.bam
    - bamtofqinp.merged.bam
    - bamtofqinp.out_1.fq.gz
    - bamtofqinp.merged.bam
    - datasource.Inp_lane1
    - bamtofqinp.out_1.fq.gz
    - bamtofqinp.err
bedcorrelate: 
  cmd: "cd [% bedcorrelate %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgappedreplicates=([% groupby.replicate.macsunmergedbroadpeak.ChIPseqout_peaks.gappedPeak %]);\n\t###\n\tbedtools intersect -u -a ${gappedreplicates[0]} -b ${gappedreplicates[1]} > [% bedcorrelate.gappedintersect.bed %];\n\tbedtools intersect -u -a ${gappedreplicates[1]} -b ${gappedreplicates[0]} > [% bedcorrelate.gappedintersect2.bed %];\n\t###\n\techo \"scale=4;(\" $(cat [% bedcorrelate.gappedintersect.bed %]|wc -l ) \"/\" $(cat ${gappedreplicates[0]} |wc -l ) \") *100\"|bc >[% bedcorrelate.gappedintersect.txt %];\n\t###\n\techo \"scale=4;(\" $(cat [% bedcorrelate.gappedintersect2.bed %]|wc -l ) \"/\" $(cat ${gappedreplicates[1]} |wc -l ) \") *100\"|bc >>[% bedcorrelate.gappedintersect.txt %];\n\t###\n\techo \"scale=4;((\" $(cat [% bedcorrelate.gappedintersect.bed %]|wc -l ) \"/\" $(cat ${gappedreplicates[0]} |wc -l ) \")+(\" $(cat [% bedcorrelate.gappedintersect2.bed %]|wc -l ) \"/\" $(cat ${gappedreplicates[1]} |wc -l ) \")) *50\"|bc >>[% bedcorrelate.gappedintersect.txt %]; 2>[% bedcorrelate.err %]"
  condition: groupby
  condition_params: 
    - replicate
  cores: 4
  mem: 5000
  placeholders: 
    - bedcorrelate
    - groupby.replicate.macsunmergedbroadpeak.ChIPseqout_peaks.gappedPeak
    - bedcorrelate.gappedintersect.bed
    - bedcorrelate.gappedintersect2.bed
    - bedcorrelate.gappedintersect.bed
    - bedcorrelate.gappedintersect.txt
    - bedcorrelate.gappedintersect2.bed
    - bedcorrelate.gappedintersect.txt
    - bedcorrelate.gappedintersect.bed
    - bedcorrelate.gappedintersect2.bed
    - bedcorrelate.gappedintersect.txt
    - bedcorrelate.err
bowtie: 
  cmd: "cd [% bowtie %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tls [% bowtie_build.touch %] [% bowtie_buildcast.touch %];\n\tset +o posix;\n\tbash <<-EOF\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\tthen bowtie2 -p 12 -x /lustre/scratch109/sanger/rg12/genome/[% datasource.Strain %]_indexed/[% datasource.Strain %] -1 <(gunzip -c [% trimgalore.output2 %]) -2 <(gunzip -c [% trimgalore.output4 %]) -S [% bowtie.out.sam %] -I 99 -X 1000 --no-discordant --no-unal;\n\telse bowtie2 -p 12 -x /lustre/scratch109/sanger/rg12/genome/[% datasource.Strain %]_indexed/[% datasource.Strain %] -U <(gunzip -c [% trimgalore.output2 %]) -S [% bowtie.out.sam %] --no-unal;\n\tfi;\n\tEOF 2>[% bowtie.err %]"
  condition: ~
  cores: 14
  mem: 7000
  placeholders: 
    - bowtie
    - bowtie_build.touch
    - bowtie_buildcast.touch
    - datasource.SE_PE
    - datasource.Strain
    - datasource.Strain
    - trimgalore.output2
    - trimgalore.output4
    - bowtie.out.sam
    - datasource.Strain
    - datasource.Strain
    - trimgalore.output2
    - bowtie.out.sam
    - bowtie.err
bowtie_build: 
  cmd: "cd [% bowtie_build %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgunzip -f /lustre/scratch109/sanger/rg12/genome/C57BL6J/mm10_C57BL6.fa.gz;\n\tbowtie2-build -f /lustre/scratch109/sanger/rg12/genome/C57BL6J/mm10_C57BL6.fa /lustre/scratch109/sanger/rg12/genome/C57BL6J_indexed/C57BL6J;\n\tgzip /lustre/scratch109/sanger/rg12/genome/C57BL6J/mm10_C57BL6.fa;\n\ttouch [% bowtie_build.touch %] 2>[% bowtie_build.err %]"
  condition: once
  mem: 5000
  placeholders: 
    - bowtie_build
    - bowtie_build.touch
    - bowtie_build.err
bowtie_buildcast: 
  cmd: "cd [% bowtie_buildcast %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgunzip -f /lustre/scratch109/sanger/rg12/genome/CASTEiJ/mm10_CAST.fa.gz;\n\tbowtie2-build -f /lustre/scratch109/sanger/rg12/genome/CASTEiJ/mm10_CAST.fa /lustre/scratch109/sanger/rg12/genome/CASTEiJ_indexed/CASTEiJ;\n\tgzip /lustre/scratch109/sanger/rg12/genome/CASTEiJ/mm10_CAST.fa;\n\ttouch [% bowtie_buildcast.touch %] 2>[% bowtie_buildcast.err %]"
  condition: once
  mem: 5000
  placeholders: 
    - bowtie_buildcast
    - bowtie_buildcast.touch
    - bowtie_buildcast.err
bowtieinp: 
  cmd: "cd [% bowtieinp %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tls [% bowtie_build.touch %] [% bowtie_buildcast.touch %];\n\tset +o posix;\n\tbash <<-EOF\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\tthen bowtie2 -p 12 -x /lustre/scratch109/sanger/rg12/genome/[% datasource.Strain %]_indexed/[% datasource.Strain %] -1 <(gunzip -c [% trimgaloreinp.output2 %]) -2 <(gunzip -c [% trimgaloreinp.output4 %]) -S [% bowtieinp.out.sam %] -I 99 -X 1000 --no-discordant --no-unal;\n\telse bowtie2 -p 12 -x /lustre/scratch109/sanger/rg12/genome/[% datasource.Strain %]_indexed/[% datasource.Strain %] -U <(gunzip -c [% trimgaloreinp.output2 %]) -S [% bowtieinp.out.sam %] --no-unal;\n\tfi;\n\tEOF 2>[% bowtieinp.err %]"
  condition: ~
  cores: 14
  mem: 7000
  placeholders: 
    - bowtieinp
    - bowtie_build.touch
    - bowtie_buildcast.touch
    - datasource.SE_PE
    - datasource.Strain
    - datasource.Strain
    - trimgaloreinp.output2
    - trimgaloreinp.output4
    - bowtieinp.out.sam
    - datasource.Strain
    - datasource.Strain
    - trimgaloreinp.output2
    - bowtieinp.out.sam
    - bowtieinp.err
chipQC: 
  cmd: "cd [% chipQC %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t#create csv\n\tName=([% jobs.datasource.Name %]);\n\tTissue=([% jobs.datasource.Cell %]);\n\tFactor=([% jobs.datasource.Mark %]);\n\tReplicate=([% jobs.datasource.repeat %]);\n\tbamReads=([% jobs.samtoolsview.output1 %]);\n\tControlID=([% jobs.datasource.Inp_Name %]);\n\tbamControl=([% jobs.samtoolsviewInp.output1 %]);\n\tPeaks=([% jobs.macsunmergedbroadpeak.output2 %]);\n\techo Name,Tissue,Factor,Replicate,bamReads,ControlID,bamControl,Peaks > [% chipQC.sample.csv %];\n\tindices=${!Name[*]}\n\tfor i in $indices;\n\t\tdo echo ${Name[i]},${Tissue[i]},${Factor[i]},${Replicate[i]},${bamReads[i]},${ControlID[i]},${bamControl[i]},${Peaks[i]} >> [% chipQC.sample.csv %];\n\tdone\n\t#Run ChIPQC\n\tR --random-flags <<RSCRIPT\nlibrary(ChIPQC)\nsamples= read.csv(\"[% chipQC.sample.csv %]\")\nQCresults= ChIPQC(samples,consensus=F, bCount=T, annotation=\"mm10\", blacklist=\"[% input.mm10-blacklist.bed %]\")\nChIPQCreport(QCresults,facetBy=c(\"Factor\",\"Tissue\"))\nRSCRIPT 2>[% chipQC.err %]"
  condition: once
  cores: 5
  mem: 5000
  placeholders: 
    - chipQC
    - jobs.datasource.Name
    - jobs.datasource.Cell
    - jobs.datasource.Mark
    - jobs.datasource.repeat
    - jobs.samtoolsview.output1
    - jobs.datasource.Inp_Name
    - jobs.samtoolsviewInp.output1
    - jobs.macsunmergedbroadpeak.output2
    - chipQC.sample.csv
    - chipQC.sample.csv
    - chipQC.sample.csv
    - input.mm10-blacklist.bed
    - chipQC.err
createhubgroup: 
  cmd: "cd [% createhubgroup %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t. /nfs/users/nfs_r/rg12/.bashrc;\n \t#ls * | grep -v err | xargs rm -rf; 2>[% createhubgroup.err %]"
  condition: groupby
  condition_params: 
    - Mark
  mem: 5000
  placeholders: 
    - createhubgroup
    - createhubgroup.err
fastquality: 
  cmd: "cd [% fastquality %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgunzip -c [% trimgalore.output2 %] | fastx_quality_stats -o [% fastquality.out1 %];\n\tfastq_quality_boxplot_graph.sh -i [% fastquality.out1 %] -o [% fastquality.out1.png %] -t [% datasource.Name %]_read1;\n\tgunzip -c [% trimgaloreinp.output2 %] | fastx_quality_stats -o [% fastquality.Inpout1 %];\n\tfastq_quality_boxplot_graph.sh -i [% fastquality.Inpout1 %] -o [% fastquality.Inpout1.png %] -t [% datasource.Name %]_input_read1;\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\tthen gunzip -c [% trimgalore.output4 %] | fastx_quality_stats -o [% fastquality.out2 %];\n\t\tfastq_quality_boxplot_graph.sh -i [% fastquality.out2 %] -o [% fastquality.out2.png %] -t [% datasource.Name %]_read2;\n\t\tgunzip -c [% trimgaloreinp.output4 %] | fastx_quality_stats -o [% fastquality.Inpout2 %];\n\t\tfastq_quality_boxplot_graph.sh -i [% fastquality.Inpout2 %] -o [% fastquality.Inpout2.png %] -t [% datasource.Name %]_input_read2;\n\tfi 2>[% fastquality.err %]"
  condition: ~
  mem: 50
  placeholders: 
    - fastquality
    - trimgalore.output2
    - fastquality.out1
    - fastquality.out1
    - fastquality.out1.png
    - datasource.Name
    - trimgaloreinp.output2
    - fastquality.Inpout1
    - fastquality.Inpout1
    - fastquality.Inpout1.png
    - datasource.Name
    - datasource.SE_PE
    - trimgalore.output4
    - fastquality.out2
    - fastquality.out2
    - fastquality.out2.png
    - datasource.Name
    - trimgaloreinp.output4
    - fastquality.Inpout2
    - fastquality.Inpout2
    - fastquality.Inpout2.png
    - datasource.Name
    - fastquality.err
macsmergedbroad: 
  cmd: "cd [% macsmergedbroad %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% predictfragment.out %];\n\tPD=${PD[% datasource.Mark %]};\n\tif [ $PD == \"\" ];then PD=[% datasource.sonication %]; fi;\n\tif [ [% datasource.SE_PE %] == \"PE\" ]; then paired=\"BAMPE\";else paired=\"BAM\";fi;\n\tlast=$(tail -1 [% bedcorrelate.gappedintersect.txt %]);\n\tint=${last%.*};\n\tif [ $int -gt 75 ];\n\t\tthen macs2 callpeak -t [% groupby.replicate.samtoolsview.out.sorted.bam %] -c [% groupby.replicate.samtoolsviewInp.out.sorted.bam %] -f $paired -g mm -n ChIPseqout -B -q 0.05 --broad --broad-cutoff 0.1 --nomodel --extsize ${PD} --keep-dup auto;\n\t\t###\n\t\t>&2 echo \"macs2 bdgcmp -t [% macsmergedbroad.output4 %] -c [% macsmergedbroad.output5 %] -o [% macsmergedbroad.FoldE.bdg %] -m FE\";\n\t\tmacs2 bdgcmp -t [% macsmergedbroad.output4 %] -c [% macsmergedbroad.output5 %] -o [% macsmergedbroad.FoldE.bdg %] -m FE;\n\t\t>&2 echo \"macs2 bdgcmp -t [% macsmergedbroad.output4 %] -c [% macsmergedbroad.output5 %] -o [% macsmergedbroad.logLR.bdg %] -m logLR -p 0.00001\";\n\t\tmacs2 bdgcmp -t [% macsmergedbroad.output4 %] -c [% macsmergedbroad.output5 %] -o [% macsmergedbroad.logLR.bdg %] -m logLR -p 0.00001;\n\t\t###\n\t\t>&2 echo \"bdg2bw [% macsmergedbroad.FoldE.bdg %] [% input.mm10.len %]\";\n\t\tbdg2bw [% macsmergedbroad.FoldE.bdg %] [% input.mm10.len %];\n\t\t>&2 echo \"bdg2bw [% macsmergedbroad.logLR.bdg %] [% input.mm10.len %]\";\n\t\tbdg2bw [% macsmergedbroad.logLR.bdg %] [% input.mm10.len %];\n\t\t###\n\t\tRscript [% macsmergedbroad.output3 %];\n\t\tbroadpeak.py [% macsmergedbroad.output1 %] broadout;\n\t\tgappedpeak.py [% macsmergedbroad.output2 %] gappedout;\n\tfi 2>[% macsmergedbroad.err %]"
  condition: groupby
  condition_params: 
    - replicate
  cores: 5
  mem: 5000
  outputfiles: 
    - ChIPseqout_peaks.broadPeak
    - ChIPseqout_peaks.gappedPeak
    - ChIPseqout_model.r
    - ChIPseqout_treat_pileup.bdg
    - ChIPseqout_control_lambda.bdg
    - FoldE.bw
    - logLR.bw
  placeholders: 
    - macsmergedbroad
    - predictfragment.out
    - datasource.Mark
    - datasource.sonication
    - datasource.SE_PE
    - bedcorrelate.gappedintersect.txt
    - groupby.replicate.samtoolsview.out.sorted.bam
    - groupby.replicate.samtoolsviewInp.out.sorted.bam
    - macsmergedbroad.output4
    - macsmergedbroad.output5
    - macsmergedbroad.FoldE.bdg
    - macsmergedbroad.output4
    - macsmergedbroad.output5
    - macsmergedbroad.FoldE.bdg
    - macsmergedbroad.output4
    - macsmergedbroad.output5
    - macsmergedbroad.logLR.bdg
    - macsmergedbroad.output4
    - macsmergedbroad.output5
    - macsmergedbroad.logLR.bdg
    - macsmergedbroad.FoldE.bdg
    - input.mm10.len
    - macsmergedbroad.FoldE.bdg
    - input.mm10.len
    - macsmergedbroad.logLR.bdg
    - input.mm10.len
    - macsmergedbroad.logLR.bdg
    - input.mm10.len
    - macsmergedbroad.output3
    - macsmergedbroad.output1
    - macsmergedbroad.output2
    - macsmergedbroad.err
macsunmergedbroadpeak: 
  cmd: "cd [% macsunmergedbroadpeak %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% predictfragment.out %];\n\tPD=${PD[% datasource.Mark %]};\n\tif [ -z \"$PD\" ];then PD=[% datasource.sonication %]; fi;\n\tif [ [% datasource.SE_PE %] == \"PE\" ]; then paired=\"BAMPE\";else paired=\"BAM\";fi;\n\tmacs2 callpeak -t [% samtoolsview.output1 %] -c [% samtoolsviewInp.output1 %] -f $paired -g mm -n ChIPseqout -B -q 0.05 --broad --broad-cutoff 0.1 --nomodel --extsize ${PD} --keep-dup auto;\n\t>&2 echo \"macs2 bdgcmp -t [% macsunmergedbroadpeak.output4 %] -c [% macsunmergedbroadpeak.output5 %] -o [% macsunmergedbroadpeak.FoldE.bdg %] -m FE\";\n\tmacs2 bdgcmp -t [% macsunmergedbroadpeak.output4 %] -c [% macsunmergedbroadpeak.output5 %] -o [% macsunmergedbroadpeak.FoldE.bdg %] -m FE;\n\t>&2 echo \"macs2 bdgcmp -t [% macsunmergedbroadpeak.output4 %] -c [% macsunmergedbroadpeak.output5 %] -o [% macsunmergedbroadpeak.logLR.bdg %] -m logLR -p 0.00001\";\n\tmacs2 bdgcmp -t [% macsunmergedbroadpeak.output4 %] -c [% macsunmergedbroadpeak.output5 %] -o [% macsunmergedbroadpeak.logLR.bdg %] -m logLR -p 0.00001;\n\t>&2 echo \"bdg2bw [% macsunmergedbroadpeak.FoldE.bdg %] [% input.mm10.len %]\";\n\tbdg2bw [% macsunmergedbroadpeak.FoldE.bdg %] [% input.mm10.len %];\n\t>&2 echo \"bdg2bw [% macsunmergedbroadpeak.logLR.bdg %] [% input.mm10.len %]\";\n\tbdg2bw [% macsunmergedbroadpeak.logLR.bdg %] [% input.mm10.len %];\n\t>&2 echo \"Rscript\";\n\tRscript [% macsunmergedbroadpeak.output3 %];\n\tbroadpeak.py [% macsunmergedbroadpeak.output1 %] broadout;\n\tgappedpeak.py [% macsunmergedbroadpeak.output2 %] gappedout;\n\tbedtools genomecov -i [% macsunmergedbroadpeak.output1 %] -g [% input.mm10.len %] -bg > [% macsunmergedbroadpeak.broad.bdg %];\n\tbedtools genomecov -i [% macsunmergedbroadpeak.output2 %] -g [% input.mm10.len %] -bg > [% macsunmergedbroadpeak.gapped.bdg %]; 2>[% macsunmergedbroadpeak.err %]"
  condition: ~
  cores: 5
  mem: 5000
  outputfiles: 
    - ChIPseqout_peaks.broadPeak
    - ChIPseqout_peaks.gappedPeak
    - ChIPseqout_model.r
    - ChIPseqout_treat_pileup.bdg
    - ChIPseqout_control_lambda.bdg
    - FoldE.bw
    - logLR.bw
  placeholders: 
    - macsunmergedbroadpeak
    - predictfragment.out
    - datasource.Mark
    - datasource.sonication
    - datasource.SE_PE
    - samtoolsview.output1
    - samtoolsviewInp.output1
    - macsunmergedbroadpeak.output4
    - macsunmergedbroadpeak.output5
    - macsunmergedbroadpeak.FoldE.bdg
    - macsunmergedbroadpeak.output4
    - macsunmergedbroadpeak.output5
    - macsunmergedbroadpeak.FoldE.bdg
    - macsunmergedbroadpeak.output4
    - macsunmergedbroadpeak.output5
    - macsunmergedbroadpeak.logLR.bdg
    - macsunmergedbroadpeak.output4
    - macsunmergedbroadpeak.output5
    - macsunmergedbroadpeak.logLR.bdg
    - macsunmergedbroadpeak.FoldE.bdg
    - input.mm10.len
    - macsunmergedbroadpeak.FoldE.bdg
    - input.mm10.len
    - macsunmergedbroadpeak.logLR.bdg
    - input.mm10.len
    - macsunmergedbroadpeak.logLR.bdg
    - input.mm10.len
    - macsunmergedbroadpeak.output3
    - macsunmergedbroadpeak.output1
    - macsunmergedbroadpeak.output2
    - macsunmergedbroadpeak.output1
    - input.mm10.len
    - macsunmergedbroadpeak.broad.bdg
    - macsunmergedbroadpeak.output2
    - input.mm10.len
    - macsunmergedbroadpeak.gapped.bdg
    - macsunmergedbroadpeak.err
pdfmerge: 
  cmd: cd [% pdfmerge %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; 	ls [% seperateclusters.config.txt %]; 2>[% pdfmerge.err %]
  condition: groupby
  condition_params: 
    - Mark
  cores: 5
  mem: 5000
  placeholders: 
    - pdfmerge
    - seperateclusters.config.txt
    - pdfmerge.err
pie: 
  cmd: "cd [% pie %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t#gapped broad output\n\tbedtools intersect -loj -a [% macsunmergedbroadpeak.output2 %] -b [% input.ens_genes_and_promoter_distal.bed %] | cut -f 19 > [% pie.out %];\n\tcat [% pie.out %] |sort|uniq -u > [% pie.out3 %];\n\tRscript [% software.pie.R %] $(grep -c Gene [% pie.out %]) $(grep -c Distal [% pie.out %]) $(grep -c Promoter [% pie.out %]) $(cat [% pie.out %] |wc -l) rplot_broad.pdf > [% pie.broad %]\n\tRscript [% software.pie.R %] $(grep -c Gene [% pie.out3 %]) $(grep -c Distal [% pie.out3 %]) $(grep -c Promoter [% pie.out3 %]) $(cat [% pie.out3 %] |wc -l) rplot_gene_broad.pdf > [% pie.gene_broad %] 2>[% pie.err %]"
  condition: ~
  mem: 5000
  placeholders: 
    - pie
    - macsunmergedbroadpeak.output2
    - input.ens_genes_and_promoter_distal.bed
    - pie.out
    - pie.out
    - pie.out3
    - software.pie.R
    - pie.out
    - pie.out
    - pie.out
    - pie.out
    - pie.broad
    - software.pie.R
    - pie.out3
    - pie.out3
    - pie.out3
    - pie.out3
    - pie.gene_broad
    - pie.err
predictfragment: 
  cmd: "cd [% predictfragment %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tMark=([% jobs.datasource.Mark %]);\n\tJobFiles=([% jobs.samtoolsview.output1 %]);\n\tuniq=($(printf \"%s\\n\" \"${Mark[@]}\" | sort -u));\n\tfor i in \"${uniq[@]}\";\n\t\tdo declare -a h${i};\n\tdone;\n\tMarkindices=${!Mark[*]};\n\tfor index in $Markindices;\n\t\tdo eval \"h${Mark[$index]}+=(${JobFiles[$index]})\";\n\tdone;\n\tfor mIndex in \"${uniq[@]}\";\n\t\tdo files=$(eval echo \"\\$$(echo {h$mIndex[@]})\");\n\t\t\teval PD${mIndex}=$(macs2 predictd -i ${files} -f BAM -g mm |& grep \"predicted fragment length is .*\" -o | grep \"[0-9]*\" -o);\n\t\t\tdeclare -p $( echo PD${mIndex}) >> [% predictfragment.out %];\n\tdone 2>[% predictfragment.err %]"
  condition: once
  cores: 5
  mem: 5000
  placeholders: 
    - predictfragment
    - jobs.datasource.Mark
    - jobs.samtoolsview.output1
    - predictfragment.out
    - predictfragment.err
samtoolsview: 
  cmd: "cd [% samtoolsview %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \ttest -e [% bowtie.out.sam %];\n\tsamtools view -hSb [% bowtie.out.sam %]> [% samtoolsview.out.bam %];\n\tsamtools sort [% samtoolsview.out.bam %] out.sorted;\n\tsamtools index [% samtoolsview.output1 %];\n\trm [% bowtie.out.sam %]; 2>[% samtoolsview.err %]"
  condition: ~
  mem: 2000
  outputfiles: 
    - out.sorted.bam
    - out.sorted.bam.bai
  placeholders: 
    - samtoolsview
    - bowtie.out.sam
    - bowtie.out.sam
    - samtoolsview.out.bam
    - samtoolsview.out.bam
    - samtoolsview.output1
    - bowtie.out.sam
    - samtoolsview.err
samtoolsviewInp: 
  cmd: "cd [% samtoolsviewInp %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \ttest -e [% bowtieinp.out.sam %];\n\tsamtools view -hSb [% bowtieinp.out.sam %] > [% samtoolsviewInp.out.bam %];\n\tsamtools sort [% samtoolsviewInp.out.bam %] out.sorted;\n\tsamtools index [% samtoolsviewInp.output1 %];\n\trm [% bowtieinp.out.sam %]; 2>[% samtoolsviewInp.err %]"
  condition: ~
  mem: 2000
  outputfiles: 
    - out.sorted.bam
    - out.sorted.bam.bai
  placeholders: 
    - samtoolsviewInp
    - bowtieinp.out.sam
    - bowtieinp.out.sam
    - samtoolsviewInp.out.bam
    - samtoolsviewInp.out.bam
    - samtoolsviewInp.output1
    - bowtieinp.out.sam
    - samtoolsviewInp.err
seperateclusters: 
  cmd: "cd [% seperateclusters %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tclusters=4;\n\tcp [% annotatepeaksgroup.output1 %] [% seperateclusters.clusters.RData %];\n\tExtractGName.R [% seperateclusters.clusters.RData %];\n\t>&2 echo \"cluster1-4\";\n\tfor i in {1..4}\n\tdo\n\t\t>&2 echo \"cluster\" ${i};\n\t\techo -e \"[% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %]\tclusters.1.cluster${i}.txt\t\\\"[% datasource.mark_full %] [% datasource.Cell %] Cell\\\"\" > [% seperateclusters.config.txt %];\n\t\t>&2 echo \"ngs.plot.r -G mm10 -R genebody -C [% seperateclusters.config.txt %] -O heatmapclusters.${i} -L 5000 -GO total -CO blue:white:red -P 5\";\n\t\tngs.plot.r -G mm10 -R genebody -C [% seperateclusters.config.txt %] -O heatmapclusters.${i} -L 3000 -GO total -CO blue:white:red -P 5;\n\t\tconvert -density 150 heatmapclusters.${i}.heatmap.pdf -quality 90 heatmapclusters.${i}.heatmap.png;\n\tdone 2>[% seperateclusters.err %]"
  condition: ~
  cores: 5
  mem: 5000
  placeholders: 
    - seperateclusters
    - annotatepeaksgroup.output1
    - seperateclusters.clusters.RData
    - seperateclusters.clusters.RData
    - samtoolsview.output1
    - samtoolsviewInp.output1
    - datasource.mark_full
    - datasource.Cell
    - seperateclusters.config.txt
    - seperateclusters.config.txt
    - seperateclusters.config.txt
    - seperateclusters.err
summarystats: 
  cmd: "cd [% summarystats %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tif [ [% datasource.datatype %] == \"cram\" ];\n\t\tthen echo \"[% datasource.Name %]_lane1\" > [% summarystats.out.flagstat %];\n\t\tiget [% datasource.Lane1 %] - | samtools view -h - | samtools flagstat - >>[% summarystats.out.flagstat %];\n\t\techo \"[% datasource.Name %]_lane2\" > [% summarystats.out.flagstat %];\n\t\tiget [% datasource.Lane2 %] - | samtools view -h - | samtools flagstat - >>[% summarystats.out.flagstat %];\n\t\techo \"Input [% datasource.Name %]_lane1\" > [% summarystats.out.flagstat %];\n\t\tiget [% datasource.Inp_lane1 %] - | samtools view -h - | samtools flagstat - >>[% summarystats.out.flagstat %];\n\t\techo \"Input [% datasource.Name %]_lane2\" > [% summarystats.out.flagstat %];\n\t\tiget [% datasource.Inp_lane2 %] - | samtools view -h - | samtools flagstat - >>[% summarystats.out.flagstat %];\n\telif [ [% datasource.datatype %] == \"bam\" ];\n\t\tthen echo \"[% datasource.Name %]_lane1\" > [% summarystats.out.flagstat %];\n\t\tsamtools flagstat [% datasource.Lane1 %] >>[% summarystats.out.flagstat %];\n\t\techo \"[% datasource.Name %]_lane2\" >> [% summarystats.out.flagstat %];\n\t\tsamtools flagstat [% datasource.Lane2 %] >> [% summarystats.out.flagstat %];\n\telse echo \"[% datasource.Name %]\" > [% summarystats.out.flagstat %];\n\t\techo \"FastQ\" > [% summarystats.out.flagstat %];\n\tfi; 2>[% summarystats.err %]"
  condition: ~
  mem: 1000
  placeholders: 
    - summarystats
    - datasource.datatype
    - datasource.Name
    - summarystats.out.flagstat
    - datasource.Lane1
    - summarystats.out.flagstat
    - datasource.Name
    - summarystats.out.flagstat
    - datasource.Lane2
    - summarystats.out.flagstat
    - datasource.Name
    - summarystats.out.flagstat
    - datasource.Inp_lane1
    - summarystats.out.flagstat
    - datasource.Name
    - summarystats.out.flagstat
    - datasource.Inp_lane2
    - summarystats.out.flagstat
    - datasource.datatype
    - datasource.Name
    - summarystats.out.flagstat
    - datasource.Lane1
    - summarystats.out.flagstat
    - datasource.Name
    - summarystats.out.flagstat
    - datasource.Lane2
    - summarystats.out.flagstat
    - datasource.Name
    - summarystats.out.flagstat
    - summarystats.out.flagstat
    - summarystats.err
trimgalore: 
  cmd: "cd [% trimgalore %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tlength=$(gunzip -c [% bamtofq.out_1.fq.gz %] | head -2| tail -1 | wc -c);\n\tlength=$(expr $length \\* 9 / 10); #10% cutoff\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\tthen\n\t\ttrim_galore --fastqc --gzip --length $length --paired -a [% datasource.Tag %] --stringency 4 --trim1 [% bamtofq.out_1.fq.gz %] [% bamtofq.out_2.fq.gz %];\n\telse\n\t\ttrim_galore --fastqc --gzip --length $length -a [% datasource.Tag %] --stringency 4 [% bamtofq.out_1.fq.gz %];\n\t\tmv out_1_trimmed.fq.gz out_1_val_1.fq.gz;\n\tfi 2>[% trimgalore.err %]"
  condition: ~
  cores: 3
  mem: 2000
  outputfiles: 
    - out_1.fq.gz_trimming_report.txt
    - out_1_val_1.fq.gz
    - out_2.fq.gz_trimming_report.txt
    - out_2_val_2.fq.gz
    - out_1_val_1.html
    - out_1_val_1.zip
    - out_2_val_2.html
    - out_2_val_2.zip
  placeholders: 
    - trimgalore
    - bamtofq.out_1.fq.gz
    - datasource.SE_PE
    - datasource.Tag
    - bamtofq.out_1.fq.gz
    - bamtofq.out_2.fq.gz
    - datasource.Tag
    - bamtofq.out_1.fq.gz
    - trimgalore.err
trimgaloreinp: 
  cmd: "cd [% trimgaloreinp %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tlength=$(gunzip -c [% bamtofqinp.out_1.fq.gz %] | head -2| tail -1 | wc -c);\n\tlength=$(expr $length \\* 9 / 10); #10% cutoff\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\tthen\n\t\ttrim_galore --fastqc --gzip --length $length --paired -a [% datasource.Inp_Tag %] --stringency 4 --trim1 [% bamtofqinp.out_1.fq.gz %] [% bamtofqinp.out_2.fq.gz %];\n\telse\n\t\ttrim_galore --fastqc --gzip --length $length -a [% datasource.Inp_Tag %] --stringency 4 [% bamtofqinp.out_1.fq.gz %];\n\t\tmv out_1_trimmed.fq.gz out_1_val_1.fq.gz; ### should FIX\n\tfi 2>[% trimgaloreinp.err %]"
  condition: ~
  cores: 3
  mem: 2000
  outputfiles: 
    - out_1.fq.gz_trimming_report.txt
    - out_1_val_1.fq.gz
    - out_2.fq.gz_trimming_report.txt
    - out_2_val_2.fq.gz
    - out_1_val_1.html
    - out_1_val_1.zip
    - out_2_val_2.html
    - out_2_val_2.zip
  placeholders: 
    - trimgaloreinp
    - bamtofqinp.out_1.fq.gz
    - datasource.SE_PE
    - datasource.Inp_Tag
    - bamtofqinp.out_1.fq.gz
    - bamtofqinp.out_2.fq.gz
    - datasource.Inp_Tag
    - bamtofqinp.out_1.fq.gz
    - trimgaloreinp.err
wigcorrelateall: 
  cmd: "cd [% wigcorrelateall %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;\ttrap SomeErrorHandler ERR;\n\t## ONLY SAYS HOW THE ALIGNMENT CORRELATES\n\t>&2 echo \"wigCorrelate macsunmergedbroadpeak FoldE\";\n\twigCorrelate [% jobs.macsunmergedbroadpeak.output6 %] > [% wigcorrelateall.macsunmergedbroadpeak_FoldE.txt %];\n\t>&2 echo \"wigCorrelate macsunmergedbroadpeak LogLR\";\n\twigCorrelate [% jobs.macsunmergedbroadpeak.output7 %] > [% wigcorrelateall.macsunmergedbroadpeak_logLR.txt %]; 2>[% wigcorrelateall.err %]"
  condition: once
  cores: 4
  mem: 5000
  placeholders: 
    - wigcorrelateall
    - jobs.macsunmergedbroadpeak.output6
    - wigcorrelateall.macsunmergedbroadpeak_FoldE.txt
    - jobs.macsunmergedbroadpeak.output7
    - wigcorrelateall.macsunmergedbroadpeak_logLR.txt
    - wigcorrelateall.err
