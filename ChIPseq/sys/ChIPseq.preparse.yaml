--- 
annotatepeaks.: "cd [% annotatepeaks %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;\tls * | grep -v err | xargs rm -rf;\n\ttrap SomeErrorHandler ERR;\n\tclusters=4\n\tngs.plot.r -G mm10 -R genebody -C [% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %] -T \"[% datasource.mark_full %] [% datasource.Cell %] Cell\" -O out -L 3000 -GO km -KNC ${clusters} -CO blue:white:red -P 5 -FI 1;\n\t[% software.ExtractGeneClusterings.r %] out;\n\tfor i in $(seq 1 ${clusters});\n\tdo\n\t\techo -e \"[% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %]\tout.cluster${i}.txt\t\\\"[% datasource.mark_full %] [% datasource.Cell %] Cell Cluster${i}\\\"\" >> [% annotatepeaks.config.txt %];\n\tdone\n\tngs.plot.r -G mm10 -R genebody -C [% annotatepeaks.config.txt %] -O clusters -L 3000 -GO hc -CO blue:white:red -P 5;\n\tcat > [% annotatepeaks.configB.txt %] << EOF\n[% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %]\t[% input.B_ordered_TPM.txt %]\t\"[% datasource.mark_full %] B cell\"\nEOF\n\tngs.plot.r -G mm10 -R genebody -C [% annotatepeaks.configB.txt %] -O TPMorderedB -L 3000 -GO none -CO blue:white:red -P 5;\n\tcat > [% annotatepeaks.configT.txt %] << EOF\n[% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %]\t[% input.T_ordered_TPM.txt %]\t\"[% datasource.mark_full %] T cell\"\nEOF\n\tngs.plot.r -G mm10 -R genebody -C [% annotatepeaks.configT.txt %] -O TPMorderedT -L 3000 -GO none -CO blue:white:red -P 5; 2>[% annotatepeaks.err %]"
annotatepeaks.cores: 5
annotatepeaks.mem: 5000
annotatepeaksgroup.: "cd [% annotatepeaksgroup %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;\tls * | grep -v err | xargs rm -rf;\n\ttrap SomeErrorHandler ERR;\n\tngs.plot.r -G mm10 -R genebody -C [% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %] -T \"[% datasource.mark_full %] [% datasource.Cell %] Cell\" -O out -L 3000 -CO blue:white:red -P 5 -FI 0;\n\tfor clusters in {4..10};\n\t\tdo name=\"cluster.${clusters}\";\n\t\treplot.r heatmap -I out.zip -O ${name} -T \"[% datasource.mark_full %] [% datasource.Cell %] Cell\" -L 3000 -GO km -KNC ${clusters} -CO blue:white:red -P 5;\n\t\tExtractGName.R ${name}.RData;\n\tdone 2>[% annotatepeaksgroup.err %]"
annotatepeaksgroup.cores: 5
annotatepeaksgroup.mem: 5000
annotatepeaksgroup.output: cluster.4.RData
bamcorrelate.cores: 16
bamcorrelate.mem: 5000
bamcorrelate.once: cd [% bamcorrelate %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;	bamCorrelate bins -b [% jobs.samtoolsview.output1 %] -o heatmap.pdf --corMethod pearson --labels [% jobs.datasource.replicate %] --colorMap Reds --zMin 0.5 --zMax 1 -o correlation_spearman.pdf; 2>[% bamcorrelate.err %]
bamtofq.: "cd [% bamtofq %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t###CRAM\n\tif [ [% datasource.datatype %] == \"cram\" ];\n\t\tthen if [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\tthen iget [% datasource.Lane1 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL F=[% bamtofq.read_1_lane_1.fastq %] F2=[% bamtofq.read_2_lane_1.fastq %];\n\t\telse iget [% datasource.Lane1 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL > [% bamtofq.read_1_lane_1.fastq %] ;\n\t\tfi;\n\t\tif [ [% datasource.multi_lane %] == \"TRUE\" ];\n\t\t\tthen if [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen iget [% datasource.Lane2 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL F=[% bamtofq.read_1_lane_2.fastq %] F2=[% bamtofq.read_2_lane_2.fastq %];\n\t\t\telse iget [% datasource.Lane2 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL > [% bamtofq.read_1_lane_2.fastq %] ;\n\t\t\tfi;\n\t\t\tcat [% bamtofq.read_1_lane_1.fastq %] [% bamtofq.read_1_lane_2.fastq %] > [% bamtofq.out_1.fq %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen cat [% bamtofq.read_2_lane_1.fastq %] [% bamtofq.read_2_lane_2.fastq %] > [% bamtofq.out_2.fq %];\n\t\t\tfi;\n\t\t\tgzip -c [% bamtofq.out_1.fq %] > [% bamtofq.out_1.fq.gz %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen gzip -c [% bamtofq.out_2.fq %] > [% bamtofq.out_2.fq.gz %];\n\t\t\tfi;\n\t\telse gzip -c [% bamtofq.read_1_lane_1.fastq %] > [% bamtofq.out_1.fq.gz %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen gzip -c [% bamtofq.read_2_lane_1.fastq %] > [% bamtofq.out_2.fq.gz %];\n\t\t\tfi;\n\t\tfi;\n\t###\xC2\xA0BAM\n\telif [ [% datasource.datatype %] == \"bam\" ];\n\t\tthen samtools sort [% datasource.Lane1 %] -o [% bamtofq.lane1.bam %];\n\t\tif [ [% datasource.multi_lane %] == \"TRUE\" ];\n\t\t\tthen samtools sort [% datasource.Lane2 %] -o [% bamtofq.lane2.bam %];\n\t\t\tsamtools merge [% bamtofq.merged.bam %] [% bamtofq.lane1.bam %] [% bamtofq.lane2.bam %];\n\t\t\trm [% bamtofq.lane1.bam %] [% bamtofq.lane2.bam %];\n\t\telse cat [% bamtofq.lane1.bam %] > [% bamtofq.merged.bam %];\n\t\t\trm [% bamtofq.lane1.bam %];\n\t\tfi;\n\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\tthen\n\t\t\t\tbamtofastq filename=[% bamtofq.merged.bam %] gz=1 F=[% bamtofq.out_1.fq.gz %] F2=[% bamtofq.out_2.fq.gz %];\n\t\t\t\trm [% bamtofq.merged.bam %];\n\t\telse\n\t\t\tbamtofastq gz=1 filename=[% bamtofq.merged.bam %] > [% bamtofq.out_1.fq.gz %];\n\t\t\trm [% bamtofq.merged.bam %];\n\t\tfi;\n\telse\n\t\tcat [% datasource.Lane1 %]* > [% bamtofq.out_1.fq.gz %];\n\tfi\n\trm *.fastq; 2>[% bamtofq.err %]"
bamtofq.mem: 1500
bamtofqinp.: "cd [% bamtofqinp %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t###CRAM\n\tif [ [% datasource.datatype %] == \"cram\" ];\n\t\tthen if [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\tthen iget [% datasource.Inp_lane1 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL F=[% bamtofqinp.read_1_lane_1.fastq %] F2=[% bamtofqinp.read_2_lane_1.fastq %];\n\t\telse iget [% datasource.Inp_lane1 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL > [% bamtofqinp.read_1_lane_1.fastq %] ;\n\t\tfi;\n\t\tif [ [% datasource.multi_lane %] == \"TRUE\" ];\n\t\t\tthen if [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen iget [% datasource.Inp_lane2 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL F=[% bamtofqinp.read_1_lane_2.fastq %] F2=[% bamtofqinp.read_2_lane_2.fastq %];\n\t\t\telse iget [% datasource.Inp_lane2 %] - | bamtofastq inputformat=cram exclude=SECONDARY,SUPPLEMENTARY,QCFAIL > [% bamtofqinp.read_1_lane_2.fastq %] ;\n\t\t\tfi;\n\t\t\tcat [% bamtofqinp.read_1_lane_1.fastq %] [% bamtofqinp.read_1_lane_2.fastq %] > [% bamtofqinp.out_1.fq %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen cat [% bamtofqinp.read_2_lane_1.fastq %] [% bamtofqinp.read_2_lane_2.fastq %] > [% bamtofqinp.out_2.fq %];\n\t\t\tfi;\n\t\t\tgzip -c [% bamtofqinp.out_1.fq %] > [% bamtofqinp.out_1.fq.gz %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen gzip -c [% bamtofqinp.out_2.fq %] > [% bamtofqinp.out_2.fq.gz %];\n\t\t\tfi;\n\t\telse gzip -c [% bamtofqinp.read_1_lane_1.fastq %] > [% bamtofqinp.out_1.fq.gz %];\n\t\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\t\tthen gzip -c [% bamtofqinp.read_2_lane_1.fastq %] > [% bamtofqinp.out_2.fq.gz %];\n\t\t\tfi;\n\t\tfi;\n\t###\xC2\xA0BAM\n\telif [ [% datasource.datatype %] == \"bam\" ];\n\t\tthen samtools sort [% datasource.Inp_lane1 %] -o [% bamtofqinp.lane1.bam %];\n\t\tif [ [% datasource.multi_lane %] == \"TRUE\" ];\n\t\t\tthen samtools sort [% datasource.Inp_lane2 %] -o [% bamtofqinp.lane2.bam %];\n\t\t\tsamtools merge [% bamtofqinp.merged.bam %] [% bamtofqinp.lane1.bam %] [% bamtofqinp.lane2.bam %];\n\t\t\trm [% bamtofqinp.lane1.bam %] [% bamtofqinp.lane2.bam %];\n\t\telse cat [% bamtofqinp.lane1.bam %] > [% bamtofqinp.merged.bam %];\n\t\t\trm [% bamtofqinp.lane1.bam %];\n\t\tfi;\n\t\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\t\tthen bamtofastq filename=[% bamtofqinp.merged.bam %] gz=1 F=[% bamtofqinp.out_1.fq.gz %] F2=[% bamtofqinp.out_2.fq.gz %];\n\t\t\trm [% bamtofqinp.merged.bam %];\n\t\telse\n\t\t\tbamtofastq gz=1 filename=[% bamtofqinp.merged.bam %] > [% bamtofqinp.out_1.fq.gz %];\n\t\t\trm [% bamtofqinp.merged.bam %];\n\t\tfi;\n\telse\n\t\tcat [% datasource.Inp_lane1 %]* > [% bamtofqinp.out_1.fq.gz %];\n\tfi\n\trm *.fastq; 2>[% bamtofqinp.err %]"
bamtofqinp.mem: 1500
bedcorrelate.cores: 4
bedcorrelate.groupby.replicate: "cd [% bedcorrelate %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgappedreplicates=([% groupby.replicate.macsunmergedbroadpeak.ChIPseqout_peaks.gappedPeak %]);\n\t###\n\tbedtools intersect -u -a ${gappedreplicates[0]} -b ${gappedreplicates[1]} > [% bedcorrelate.gappedintersect.bed %];\n\tbedtools intersect -u -a ${gappedreplicates[1]} -b ${gappedreplicates[0]} > [% bedcorrelate.gappedintersect2.bed %];\n\t###\n\techo \"scale=4;(\" $(cat [% bedcorrelate.gappedintersect.bed %]|wc -l ) \"/\" $(cat ${gappedreplicates[0]} |wc -l ) \") *100\"|bc >[% bedcorrelate.gappedintersect.txt %];\n\t###\n\techo \"scale=4;(\" $(cat [% bedcorrelate.gappedintersect2.bed %]|wc -l ) \"/\" $(cat ${gappedreplicates[1]} |wc -l ) \") *100\"|bc >>[% bedcorrelate.gappedintersect.txt %];\n\t###\n\techo \"scale=4;((\" $(cat [% bedcorrelate.gappedintersect.bed %]|wc -l ) \"/\" $(cat ${gappedreplicates[0]} |wc -l ) \")+(\" $(cat [% bedcorrelate.gappedintersect2.bed %]|wc -l ) \"/\" $(cat ${gappedreplicates[1]} |wc -l ) \")) *50\"|bc >>[% bedcorrelate.gappedintersect.txt %]; 2>[% bedcorrelate.err %]"
bedcorrelate.mem: 5000
bowtie.: "cd [% bowtie %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tls [% bowtie_build.touch %] [% bowtie_buildcast.touch %];\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\tthen [% software.bowtierun %] -p [% datasource.SE_PE %] -1 [% trimgalore.output2 %] -2 [% trimgalore.output4 %] -o [% bowtie.out.sam %] -s [% datasource.Strain %];\n\telse [% software.bowtierun %] -p [% datasource.SE_PE %] -1 [% trimgalore.output2 %] -o [% bowtie.out.sam %] -s [% datasource.Strain %];\n\tfi 2>[% bowtie.err %]"
bowtie.cores: 14
bowtie.mem: 7000
bowtie_build.mem: 5000
bowtie_build.once: "cd [% bowtie_build %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgunzip -f /lustre/scratch109/sanger/rg12/genome/C57BL6J/mm10_C57BL6.fa.gz;\n\tbowtie2-build -f /lustre/scratch109/sanger/rg12/genome/C57BL6J/mm10_C57BL6.fa /lustre/scratch109/sanger/rg12/genome/C57BL6J_indexed/C57BL6J;\n\tgzip /lustre/scratch109/sanger/rg12/genome/C57BL6J/mm10_C57BL6.fa;\n\ttouch [% bowtie_build.touch %] 2>[% bowtie_build.err %]"
bowtie_buildcast.mem: 5000
bowtie_buildcast.once: "cd [% bowtie_buildcast %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgunzip -f /lustre/scratch109/sanger/rg12/genome/CASTEiJ/mm10_CAST.fa.gz;\n\tbowtie2-build -f /lustre/scratch109/sanger/rg12/genome/CASTEiJ/mm10_CAST.fa /lustre/scratch109/sanger/rg12/genome/CASTEiJ_indexed/CASTEiJ;\n\tgzip /lustre/scratch109/sanger/rg12/genome/CASTEiJ/mm10_CAST.fa;\n\ttouch [% bowtie_buildcast.touch %] 2>[% bowtie_buildcast.err %]"
bowtieinp.: "cd [% bowtieinp %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tls [% bowtie_build.touch %] [% bowtie_buildcast.touch %];\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\t\tthen [% software.bowtierun %] -p [% datasource.SE_PE %] -1 [% trimgaloreinp.output2 %] -2 [% trimgaloreinp.output4 %] -o [% bowtieinp.out.sam %] -s [% datasource.Strain %];\n\telse [% software.bowtierun %] -p [% datasource.SE_PE %] -1 [% trimgaloreinp.output2 %] -o [% bowtieinp.out.sam %] -s [% datasource.Strain %];\n\tfi 2>[% bowtieinp.err %]"
bowtieinp.cores: 14
bowtieinp.mem: 7000
chipQC.cores: 5
chipQC.mem: 5000
chipQC.once: "cd [% chipQC %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t#create csv\n\tName=([% jobs.datasource.Name %]);\n\tTissue=([% jobs.datasource.Cell %]);\n\tFactor=([% jobs.datasource.Mark %]);\n\tReplicate=([% jobs.datasource.repeat %]);\n\tbamReads=([% jobs.samtoolsview.output1 %]);\n\tControlID=([% jobs.datasource.Inp_Name %]);\n\tbamControl=([% jobs.samtoolsviewInp.output1 %]);\n\tPeaks=([% jobs.macsunmergedbroadpeak.output2 %]);\n\techo Name,Tissue,Factor,Replicate,bamReads,ControlID,bamControl,Peaks > [% chipQC.sample.csv %];\n\tindices=${!Name[*]}\n\tfor i in $indices;\n\t\tdo echo ${Name[i]},${Tissue[i]},${Factor[i]},${Replicate[i]},${bamReads[i]},${ControlID[i]},${bamControl[i]},${Peaks[i]} >> [% chipQC.sample.csv %];\n\tdone\n\t#Run ChIPQC\n\tR --random-flags <<RSCRIPT\nlibrary(ChIPQC)\nsamples= read.csv(\"[% chipQC.sample.csv %]\")\nQCresults= ChIPQC(samples,consensus=F, bCount=T, annotation=\"mm10\", blacklist=\"[% input.mm10-blacklist.bed %]\")\nChIPQCreport(QCresults,facetBy=c(\"Factor\",\"Tissue\"))\nRSCRIPT 2>[% chipQC.err %]"
createhubgroup.groupby.Mark: cd [% createhubgroup %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc; 	#ls * | grep -v err | xargs rm -rf; 2>[% createhubgroup.err %]
createhubgroup.mem: 5000
fastquality.: "cd [% fastquality %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tgunzip -c [% trimgalore.output2 %] | fastx_quality_stats -o [% fastquality.out1 %];\n\tfastq_quality_boxplot_graph.sh -i [% fastquality.out1 %] -o [% fastquality.out1.png %] -t [% datasource.Name %]_read1;\n\tgunzip -c [% trimgaloreinp.output2 %] | fastx_quality_stats -o [% fastquality.Inpout1 %];\n\tfastq_quality_boxplot_graph.sh -i [% fastquality.Inpout1 %] -o [% fastquality.Inpout1.png %] -t [% datasource.Name %]_input_read1;\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\tthen gunzip -c [% trimgalore.output4 %] | fastx_quality_stats -o [% fastquality.out2 %];\n\t\tfastq_quality_boxplot_graph.sh -i [% fastquality.out2 %] -o [% fastquality.out2.png %] -t [% datasource.Name %]_read2;\n\t\tgunzip -c [% trimgaloreinp.output4 %] | fastx_quality_stats -o [% fastquality.Inpout2 %];\n\t\tfastq_quality_boxplot_graph.sh -i [% fastquality.Inpout2 %] -o [% fastquality.Inpout2.png %] -t [% datasource.Name %]_input_read2;\n\tfi 2>[% fastquality.err %]"
fastquality.mem: 50
macsmergedbroad.cores: 5
macsmergedbroad.groupby.replicate: "cd [% macsmergedbroad %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tif [ [% datasource.SE_PE %] == \"PE\" ]; then paired=\"BAMPE\";else paired=\"BAM\";fi;\n\tlast=$(tail -1 [% bedcorrelate.gappedintersect.txt %]);\n\tint=${last%.*};\n\tif [ $int -gt 75 ];\n\t\tthen macs2 callpeak -t [% groupby.replicate.samtoolsview.out.sorted.bam %] -c [% groupby.replicate.samtoolsviewInp.out.sorted.bam %] -f $paired -g mm -n ChIPseqout -B -q 0.05 --broad --broad-cutoff 0.1 --nomodel --extsize ${PD} --keep-dup auto;\n\t\t###\n\t\t>&2 echo \"macs2 bdgcmp -t [% macsmergedbroad.output4 %] -c [% macsmergedbroad.output5 %] -o [% macsmergedbroad.FoldE.bdg %] -m FE\";\n\t\tmacs2 bdgcmp -t [% macsmergedbroad.output4 %] -c [% macsmergedbroad.output5 %] -o [% macsmergedbroad.FoldE.bdg %] -m FE;\n\t\t>&2 echo \"macs2 bdgcmp -t [% macsmergedbroad.output4 %] -c [% macsmergedbroad.output5 %] -o [% macsmergedbroad.logLR.bdg %] -m logLR -p 0.00001\";\n\t\tmacs2 bdgcmp -t [% macsmergedbroad.output4 %] -c [% macsmergedbroad.output5 %] -o [% macsmergedbroad.logLR.bdg %] -m logLR -p 0.00001;\n\t\t###\n\t\t>&2 echo \"bdg2bw [% macsmergedbroad.FoldE.bdg %] [% input.mm10.len %]\";\n\t\tbdg2bw [% macsmergedbroad.FoldE.bdg %] [% input.mm10.len %];\n\t\t>&2 echo \"bdg2bw [% macsmergedbroad.logLR.bdg %] [% input.mm10.len %]\";\n\t\tbdg2bw [% macsmergedbroad.logLR.bdg %] [% input.mm10.len %];\n\t\t###\n\t\tRscript [% macsmergedbroad.output3 %];\n\t\tbroadpeak.py [% macsmergedbroad.output1 %] broadout;\n\t\tgappedpeak.py [% macsmergedbroad.output2 %] gappedout;\n\tfi 2>[% macsmergedbroad.err %]"
macsmergedbroad.mem: 5000
macsmergedbroad.output: ChIPseqout_peaks.broadPeak ChIPseqout_peaks.gappedPeak ChIPseqout_model.r ChIPseqout_treat_pileup.bdg ChIPseqout_control_lambda.bdg FoldE.bw logLR.bw
macsunmergedbroadpeak.: "cd [% macsunmergedbroadpeak %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tsource [% predictfragment.out %];\n\tif [ [% datasource.SE_PE %] == \"PE\" ]; then paired=\"BAMPE\";else paired=\"BAM\";fi;\n\tmacs2 callpeak -t [% samtoolsview.output1 %] -c [% samtoolsviewInp.output1 %] -f $paired -g mm -n ChIPseqout -B -q 0.05 --broad --broad-cutoff 0.1 --nomodel --extsize ${PD} --keep-dup auto;\n\t>&2 echo \"macs2 bdgcmp -t [% macsunmergedbroadpeak.output4 %] -c [% macsunmergedbroadpeak.output5 %] -o [% macsunmergedbroadpeak.FoldE.bdg %] -m FE\";\n\tmacs2 bdgcmp -t [% macsunmergedbroadpeak.output4 %] -c [% macsunmergedbroadpeak.output5 %] -o [% macsunmergedbroadpeak.FoldE.bdg %] -m FE;\n\t>&2 echo \"macs2 bdgcmp -t [% macsunmergedbroadpeak.output4 %] -c [% macsunmergedbroadpeak.output5 %] -o [% macsunmergedbroadpeak.logLR.bdg %] -m logLR -p 0.00001\";\n\tmacs2 bdgcmp -t [% macsunmergedbroadpeak.output4 %] -c [% macsunmergedbroadpeak.output5 %] -o [% macsunmergedbroadpeak.logLR.bdg %] -m logLR -p 0.00001;\n\t>&2 echo \"bdg2bw [% macsunmergedbroadpeak.FoldE.bdg %] [% input.mm10.len %]\";\n\tbdg2bw [% macsunmergedbroadpeak.FoldE.bdg %] [% input.mm10.len %];\n\t>&2 echo \"bdg2bw [% macsunmergedbroadpeak.logLR.bdg %] [% input.mm10.len %]\";\n\tbdg2bw [% macsunmergedbroadpeak.logLR.bdg %] [% input.mm10.len %];\n\t>&2 echo \"Rscript\";\n\tRscript [% macsunmergedbroadpeak.output3 %];\n\tbroadpeak.py [% macsunmergedbroadpeak.output1 %] broadout;\n\tgappedpeak.py [% macsunmergedbroadpeak.output2 %] gappedout;\n\tbedtools genomecov -i [% macsunmergedbroadpeak.output1 %] -g [% input.mm10.len %] -bg > [% macsunmergedbroadpeak.broad.bdg %];\n\tbedtools genomecov -i [% macsunmergedbroadpeak.output2 %] -g [% input.mm10.len %] -bg > [% macsunmergedbroadpeak.gapped.bdg %]; 2>[% macsunmergedbroadpeak.err %]"
macsunmergedbroadpeak.cores: 5
macsunmergedbroadpeak.mem: 5000
macsunmergedbroadpeak.output: ChIPseqout_peaks.broadPeak ChIPseqout_peaks.gappedPeak ChIPseqout_model.r ChIPseqout_treat_pileup.bdg ChIPseqout_control_lambda.bdg FoldE.bw logLR.bw
pdfmerge.cores: 5
pdfmerge.groupby.Mark: "cd [% pdfmerge %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;\tls * | grep -v err | xargs rm -rf;\n\ttrap SomeErrorHandler ERR;\n\tpdfunite [% groupby.Mark.annotatepeaksgroup.cluster.4.pdf %] Cluster4.pdf;\n\tpdfunite [% groupby.Mark.annotatepeaksgroup.cluster.5.pdf %] Cluster5.pdf;\n\tpdfunite [% groupby.Mark.annotatepeaksgroup.cluster.6.pdf %] Cluster6.pdf;\n\tpdfunite [% groupby.Mark.annotatepeaksgroup.cluster.7.pdf %] Cluster7.pdf;\n\tpdfunite [% groupby.Mark.annotatepeaksgroup.cluster.8.pdf %] Cluster8.pdf;\n\tpdfunite [% groupby.Mark.annotatepeaksgroup.cluster.9.pdf %] Cluster9.pdf;\n\tpdfunite [% groupby.Mark.annotatepeaksgroup.cluster.10.pdf %] Cluster10.pdf; 2>[% pdfmerge.err %]"
pdfmerge.mem: 5000
pie.: "cd [% pie %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \t#gapped broad output\n\tbedtools intersect -loj -a [% macsunmergedbroadpeak.output2 %] -b [% input.ens_genes_and_promoter_distal.bed %] | cut -f 19 > [% pie.out %];\n\tcat [% pie.out %] |sort|uniq -u > [% pie.out3 %];\n\tRscript [% software.pie.R %] $(grep -c Gene [% pie.out %]) $(grep -c Distal [% pie.out %]) $(grep -c Promoter [% pie.out %]) $(cat [% pie.out %] |wc -l) rplot_broad.pdf > [% pie.broad %]\n\tRscript [% software.pie.R %] $(grep -c Gene [% pie.out3 %]) $(grep -c Distal [% pie.out3 %]) $(grep -c Promoter [% pie.out3 %]) $(cat [% pie.out3 %] |wc -l) rplot_gene_broad.pdf > [% pie.gene_broad %] 2>[% pie.err %]"
pie.mem: 5000
predictfragment.cores: 5
predictfragment.mem: 5000
predictfragment.once: "cd [% predictfragment %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tPD=$(macs2 predictd -i [% jobs.samtoolsview.output1 %] -f BAM -g mm |grep \"predicted fragment length is .*\" -o | grep \"[0-9]*\" -o)\n\tdeclare -p ${PD} | cut -d ' ' -f 3- > [% predictfragment.out %] 2>[% predictfragment.err %]"
samtoolsview.: "cd [% samtoolsview %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \ttest -e [% bowtie.out.sam %];\n\tsamtools view -hSb [% bowtie.out.sam %]> [% samtoolsview.out.bam %];\n\tsamtools sort [% samtoolsview.out.bam %] out.sorted;\n\tsamtools index [% samtoolsview.output1 %];\n\trm [% bowtie.out.sam %]; 2>[% samtoolsview.err %]"
samtoolsview.mem: 2000
samtoolsview.output: out.sorted.bam out.sorted.bam.bai
samtoolsviewInp.: "cd [% samtoolsviewInp %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \ttest -e [% bowtieinp.out.sam %];\n\tsamtools view -hSb [% bowtieinp.out.sam %] > [% samtoolsviewInp.out.bam %];\n\tsamtools sort [% samtoolsviewInp.out.bam %] out.sorted;\n\tsamtools index [% samtoolsviewInp.output1 %];\n\trm [% bowtieinp.out.sam %]; 2>[% samtoolsviewInp.err %]"
samtoolsviewInp.mem: 2000
samtoolsviewInp.output: out.sorted.bam out.sorted.bam.bai
seperateclusters.: "cd [% seperateclusters %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;\tls * | grep -v err | xargs rm -rf;\n\ttrap SomeErrorHandler ERR;\n\tclusters=4;\n\tcp [% annotatepeaksgroup.output1 %] [% seperateclusters.clusters.RData %];\n\tExtractGName.R [% seperateclusters.clusters.RData %];\n\t>&2 echo \"cluster1-4\";\n\tfor i in {1..4}\n\tdo\n\t\t>&2 echo \"cluster\" ${i};\n\t\techo -e \"[% samtoolsview.output1 %]:[% samtoolsviewInp.output1 %]\tclusters.1.cluster${i}.txt\t\\\"[% datasource.mark_full %] [% datasource.Cell %] Cell\\\"\" > [% seperateclusters.config.txt %];\n\t\t>&2 echo \"ngs.plot.r -G mm10 -R genebody -C [% seperateclusters.config.txt %] -O heatmapclusters.${i} -L 5000 -GO total -CO blue:white:red -P 5\";\n\t\tngs.plot.r -G mm10 -R genebody -C [% seperateclusters.config.txt %] -O heatmapclusters.${i} -L 3000 -GO total -CO blue:white:red -P 5;\n\t\tconvert -density 150 heatmapclusters.${i}.heatmap.pdf -quality 90 heatmapclusters.${i}.heatmap.png;\n\tdone 2>[% seperateclusters.err %]"
seperateclusters.cores: 5
seperateclusters.mem: 5000
summarystats.: "cd [% summarystats %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tif [ [% datasource.datatype %] == \"cram\" ];\n\t\tthen echo \"[% datasource.Name %]_lane1\" > [% summarystats.out.flagstat %];\n\t\tiget [% datasource.Lane1 %] - | samtools view -h - | samtools flagstat - >>[% summarystats.out.flagstat %];\n\t\techo \"[% datasource.Name %]_lane2\" > [% summarystats.out.flagstat %];\n\t\tiget [% datasource.Lane2 %] - | samtools view -h - | samtools flagstat - >>[% summarystats.out.flagstat %];\n\t\techo \"Input [% datasource.Name %]_lane1\" > [% summarystats.out.flagstat %];\n\t\tiget [% datasource.Inp_lane1 %] - | samtools view -h - | samtools flagstat - >>[% summarystats.out.flagstat %];\n\t\techo \"Input [% datasource.Name %]_lane2\" > [% summarystats.out.flagstat %];\n\t\tiget [% datasource.Inp_lane2 %] - | samtools view -h - | samtools flagstat - >>[% summarystats.out.flagstat %];\n\telif [ [% datasource.datatype %] == \"bam\" ];\n\t\tthen echo \"[% datasource.Name %]_lane1\" > [% summarystats.out.flagstat %];\n\t\tsamtools flagstat [% datasource.Lane1 %] >>[% summarystats.out.flagstat %];\n\t\techo \"[% datasource.Name %]_lane2\" >> [% summarystats.out.flagstat %];\n\t\tsamtools flagstat [% datasource.Lane2 %] >> [% summarystats.out.flagstat %];\n\telse echo \"[% datasource.Name %]\" > [% summarystats.out.flagstat %];\n\t\techo \"FastQ\" > [% summarystats.out.flagstat %];\n\tfi; 2>[% summarystats.err %]"
summarystats.mem: 1000
trimgalore.: "cd [% trimgalore %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tlength=$(gunzip -c [% bamtofq.out_1.fq.gz %] | head -2| tail -1 | wc -c);\n\tlength=$(expr $length \\* 9 / 10); #10% cutoff\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\tthen\n\t\ttrim_galore --fastqc --gzip --length $length --paired -a [% datasource.Tag %] --stringency 4 --trim1 [% bamtofq.out_1.fq.gz %] [% bamtofq.out_2.fq.gz %];\n\telse\n\t\ttrim_galore --fastqc --gzip --length $length -a [% datasource.Tag %] --stringency 4 [% bamtofq.out_1.fq.gz %];\n\t\tmv out_1_trimmed.fq.gz out_1_val_1.fq.gz;\n\tfi 2>[% trimgalore.err %]"
trimgalore.cores: 3
trimgalore.mem: 2000
trimgalore.output: out_1.fq.gz_trimming_report.txt out_1_val_1.fq.gz out_2.fq.gz_trimming_report.txt out_2_val_2.fq.gz out_1_val_1.html out_1_val_1.zip out_2_val_2.html out_2_val_2.zip
trimgaloreinp.: "cd [% trimgaloreinp %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; \tlength=$(gunzip -c [% bamtofqinp.out_1.fq.gz %] | head -2| tail -1 | wc -c);\n\tlength=$(expr $length \\* 9 / 10); #10% cutoff\n\tif [ [% datasource.SE_PE %] == \"PE\" ];\n\tthen\n\t\ttrim_galore --fastqc --gzip --length $length --paired -a [% datasource.Inp_Tag %] --stringency 4 --trim1 [% bamtofqinp.out_1.fq.gz %] [% bamtofqinp.out_2.fq.gz %];\n\telse\n\t\ttrim_galore --fastqc --gzip --length $length -a [% datasource.Inp_Tag %] --stringency 4 [% bamtofqinp.out_1.fq.gz %];\n\t\tmv out_1_trimmed.fq.gz out_1_val_1.fq.gz; ### should FIX\n\tfi 2>[% trimgaloreinp.err %]"
trimgaloreinp.cores: 3
trimgaloreinp.mem: 2000
trimgaloreinp.output: out_1.fq.gz_trimming_report.txt out_1_val_1.fq.gz out_2.fq.gz_trimming_report.txt out_2_val_2.fq.gz out_1_val_1.html out_1_val_1.zip out_2_val_2.html out_2_val_2.zip
wigcorrelate.cores: 4
wigcorrelate.groupby.replicate: "cd [% wigcorrelate %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;\ttrap SomeErrorHandler ERR;\n\tls [% macsunmergedbroadpeak.output6 %];\n\tlength=([% groupby.replicate.macsunmergedbroadpeak.FoldE.bw %]);\n\t#Change FoldE.bw to output16\n\tif [ ${#length[@]} != 1 ];\n\t\tthen\n\t\twigCorrelate [% groupby.replicate.macsunmergedbroadpeak.FoldE.bw %] > [% wigcorrelate.out %];\n\tfi; 2>[% wigcorrelate.err %]"
wigcorrelate.mem: 5000
wigcorrelateall.cores: 4
wigcorrelateall.mem: 5000
wigcorrelateall.once: "cd [% wigcorrelateall %];  ls * | grep -v err | xargs rm -rf;. /nfs/users/nfs_r/rg12/.bashrc;>&2 date;trap SomeErrorHandler ERR; . /nfs/users/nfs_r/rg12/.bashrc;\ttrap SomeErrorHandler ERR;\n\t## ONLY SAYS HOW THE ALIGNMENT CORRELATES\n\t>&2 echo \"wigCorrelate macsunmergedbroadpeak FoldE\";\n\twigCorrelate [% jobs.macsunmergedbroadpeak.output6 %] > [% wigcorrelateall.macsunmergedbroadpeak_FoldE.txt %];\n\t>&2 echo \"wigCorrelate macsunmergedbroadpeak LogLR\";\n\twigCorrelate [% jobs.macsunmergedbroadpeak.output7 %] > [% wigcorrelateall.macsunmergedbroadpeak_logLR.txt %]; 2>[% wigcorrelateall.err %]"
